use cbindgen::Config;
use std::env;
use std::path::PathBuf;

fn main() {
    let crate_dir = env::var("CARGO_MANIFEST_DIR").unwrap();
    let output_file = PathBuf::from(&crate_dir)
        .join("include")
        .join("dart_quic_ffi.h");

    if let Some(parent) = output_file.parent() {
        std::fs::create_dir_all(parent).unwrap();
    }

    let config = Config {
        language: cbindgen::Language::C,
        header: Some(String::from("/* dart-quic-ffi C bindings */\n#pragma once")),
        include_guard: Some(String::from("DART_QUIC_FFI_H")),
        autogen_warning: Some(String::from("/* Warning, this file is autogenerated by cbindgen. Don't modify this manually. */")),
        ..Default::default()
    };

    cbindgen::Builder::new()
        .with_crate(crate_dir)
        .with_config(config)
        .generate()
        .expect("Unable to generate bindings")
        .write_to_file(output_file);
}
